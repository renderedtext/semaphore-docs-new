---
layout: post
title: JavaScript Continuous Integration
alias: docs/javascript.html
category: Languages
---

Semaphore makes it easy to test and deploy JavaScript and Node.js applications.
The first time you add your project, Semaphore will analyze the code and propose
a set of working build commands to test it. In most cases no additional setup
is required.

Semaphore also lets you select a version of Node.js to be used in the build
and deploy environment and includes the most popular package management and
task running tools preinstalled.

#### Dependency Management

Your project dependencies are automatically cached and reused across builds.
There is no need for additional configuration for cache.

Unfortuantely, there's currently no automatic setup for Yarn. To use Yarn for
dependency management, use the following setup commands:

```
yarn config set cache-folder "$SEMAPHORE_CACHE_DIR/yarn"
yarn --frozen-lockfile
```

<h4>JavaScript essentials</h4>
<ul>
  <li><a href="/docs/languages/javascript/setting-up-javascript-project-on-semaphore.html">Setting up a JavaScript project on Semaphore</a></li>
  <li><a href="/docs/languages/javascript/javascript-support-on-semaphore.html">JavaScript support on Semaphore</a></li>
</ul>

<h4>Guides</h4>
<ul>
  <li><a href="https://semaphoreci.com/blog/2013/05/28/jasmine-javascript-tests-for-continuous-integration.html">Setting up Jasmine JavaScript tests for continuous integration</a></li>
</ul>

<h4>Customizing CI setup for JavaScript projects</h4>
<ul>
<li><a href="/docs/languages/javascript/custom-config-js.html">Creating custom config.js with database credentials</a></li>
</ul>

<h4>Troubleshooting JavaScript builds</h4>
<ul>
  <li><a href="/docs/general-troubleshooting.html">General build troubleshooting</a></li>
</ul>
